{"version":3,"sources":["img/login.svg","Component/TextField.js","Component/loginForm.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["style","small","color","TextField","label","props","useField","field","console","log","className","autoComplete","component","name","LoginForm","validate","Yup","firstName","max","required","lastName","email","password","min","confirmPassword","oneOf","initialValues","validationSchema","onSubmit","values","type","App","src","LoginPic","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAe,MAA0B,kC,oCCEnCA,EAAQ,CACVC,MAAQ,CACJC,MAAQ,QAGHC,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAWC,EAAW,iBAC7C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,UAEA,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,OAAf,UACI,kCAAQN,EAAR,OACA,2DAAQM,UAAU,4BAAgCH,GAAWF,GAA7D,IAAsEM,aAAa,SACnF,cAAC,IAAD,CAAgBX,MAAOA,EAAMC,MAAOW,UAAU,QAASC,KAAMN,EAAMM,W,OC2ChEC,EArDG,WACd,IAAMC,EAAWC,IAAW,CACxBC,UAAYD,MACXE,IAAI,GAAK,iCACTC,SAAS,YACVC,SAAWJ,MACVE,IAAI,GAAK,iCACTC,SAAS,YACVE,MAAQL,IAAW,oBAClBK,MAAM,uBACNF,SAAS,YACVG,SAAUN,MACTO,IAAI,EAAE,qDACNJ,SAAS,wBACVK,gBAAkBR,MACjBS,MAAM,CAACT,IAAQ,YAAc,MAAQ,4BAE1C,OACA,8BACE,cAAC,IAAD,CACEU,cAAe,CACbT,UAAW,GACXG,SAAS,GACTC,MAAM,GACNC,SAAS,GACTE,gBAAgB,IAElBG,iBAAkBZ,EAClBa,SAAU,SAAAC,GAAM,OAAErB,QAAQC,IAAIoB,IAThC,SAYG,SAAAA,GAAM,OAEH,eAAC,IAAD,WACI,cAAC,EAAD,CAAWzB,MAAM,aAAaS,KAAK,YAAaiB,KAAK,SACrD,cAAC,EAAD,CAAW1B,MAAM,YAAYS,KAAK,WAAWiB,KAAK,SAClD,cAAC,EAAD,CAAW1B,MAAM,QAAQS,KAAK,QAAQiB,KAAK,UAC3C,cAAC,EAAD,CAAW1B,MAAM,WAAWS,KAAK,WAAWiB,KAAK,aACjD,cAAC,EAAD,CAAW1B,MAAM,mBAAmBS,KAAK,kBAAkBiB,KAAK,aAChE,wBAAQpB,UAAU,oBAAoBoB,KAAK,SAA3C,sBACA,wBAAQpB,UAAU,sBAAsBoB,KAAK,QAA7C,4BCnBDC,EArBH,WACV,OACE,qBAAKrB,UAAU,iBAAf,SAEA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACA,oBAAIA,UAAU,mBAAd,qBAEI,cAAC,EAAD,OAGJ,qBAAKA,UAAU,oBAAf,SACE,qBAAKsB,IAAKC,EAAUvB,UAAU,sBAAsBwB,IAAI,OAE1D,8BCNSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.879fd61e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login.8cbb0712.svg\";","import { useField ,ErrorMessage } from 'formik'\r\nimport React from 'react'\r\nconst style = {\r\n    small : {\r\n        color : \"red\"\r\n    }\r\n}\r\nexport const TextField = ({label , ...props}) => {\r\n    const [field ,meta] = useField(props)\r\n    console.log(field)\r\n    return (\r\n        <div className=\"mb-2\">\r\n            <label>{label}:</label>\r\n            <input  className=\"form-control shadow-none\"  {...field} {...props}   autoComplete=\"off\" />\r\n            <ErrorMessage   style={style.small} component=\"small\"  name={field.name} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { TextField } from \"./TextField\";\r\nimport * as Yup from \"yup\"\r\nconst LoginForm = () => {\r\n    const validate = Yup.object({\r\n        firstName : Yup.string()\r\n        .max(15 , \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n        lastName : Yup.string()\r\n        .max(15 , \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n        email : Yup.string(\"Enter your email\")\r\n        .email(\"Enter a valid email\")\r\n        .required(\"Required\"),\r\n        password :Yup.string()\r\n        .min(6,\"Password should be of minimum 8 characters length\")\r\n        .required(\"Password is Required\"),\r\n        confirmPassword : Yup.string()\r\n        .oneOf([Yup.ref(\"password\") , null] , \"Password Must be Match\")\r\n    })\r\n    return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName:\"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          confirmPassword:\"\",\r\n        }}\r\n        validationSchema={validate}\r\n        onSubmit={values=>console.log(values)}\r\n      >\r\n\r\n        {values=>\r\n        (\r\n            <Form>\r\n                <TextField label=\"First Name\" name=\"firstName\"  type=\"text\" />\r\n                <TextField label=\"Last Name\" name=\"lastName\" type=\"text\" />\r\n                <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n                <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n                <button className=\"btn btn-dark mx-2\" type=\"submit\">Register</button>\r\n                <button className=\"btn btn-danger mx-2\" type=\"reset\">Reset</button>\r\n            </Form>\r\n\r\n        )\r\n        }\r\n\r\n\r\n\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\nimport Basic from './Component/Basic'\nimport LoginPic from \"./img/login.svg\"\nimport LoginForm from \"./Component/loginForm.jsx\"\nconst App = () => {\n  return (\n    <div className=\"container mt-5\">\n\n    <div className=\"row\">\n      <div className=\"col-md-5\">\n      <h1 className=\"font-weight-bold\">SIGN UP</h1>\n          \n          <LoginForm />\n\n      </div>\n      <div className=\"col-md-5  my-auto\">\n        <img src={LoginPic} className=\"img-fluid mt-3 mb-3\" alt=\"\" />\n      </div>\n      <div></div>\n\n    </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}